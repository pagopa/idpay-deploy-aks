microservice-chart:
  namespace: "idpay"
  nameOverride: ""
  fullnameOverride: ""

  livenessProbe:
    handlerType: httpGet
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 120
    failureThreshold: 15
    periodSeconds: 10

  readinessProbe:
    handlerType: httpGet
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 125
    failureThreshold: 15
    periodSeconds: 10

  deployment:
    create: true
    topologySpreadConstraints:
      create: true
      useDefaultConfiguration: true

  service:
    create: true
    type: ClusterIP
    port: 8080

  ingress:
    create: true
    path: /idpaymock/(.*)

  podAnnotations: {}

  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault

  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 10000
    runAsGroup: 10000

  envConfig:
    MONGODB_DBNAME: idpay
    APPLICATIONINSIGHTS_ROLE_NAME: "idpaymock"
    APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL: "OFF"
    APPLICATIONINSIGHTS_INSTRUMENTATION_MICROMETER_ENABLED: "false"
    APPLICATIONINSIGHTS_PREVIEW_PROFILER_ENABLED: "false"
    ENABLE_AUDIT_APPENDER: "TRUE"

  externalConfigMapValues:
    idpay-common:
      TZ: TZ

    rest-client:
      PDV_ENCRYPT_BASE_URL: pdv_decrypt_base_url

  envSecret:
    MONGODB_URI: mongodb-primary-connection-string
    PDV_ENCRYPT_API_KEY: pdv-api-key

  # nodeSelector: {}

  tolerations:
    - key: "idpayOnly"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

  # affinity: {}

  externalConfigMapFiles:
    create: true
    configMaps:
      - name: appinsights-config
        key: applicationinsights.json
